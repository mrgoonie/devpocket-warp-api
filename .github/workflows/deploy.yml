name: Deploy

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run database migrations (staging)
      run: |
        alembic upgrade head
      env:
        DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # e.g., Docker deployment, cloud provider deployment, etc.

    - name: Run health checks
      run: |
        echo "Running staging health checks..."
        # Add health check commands
        curl -f ${{ secrets.STAGING_URL }}/health || exit 1

    - name: Run smoke tests
      run: |
        pytest tests/smoke/ \
          --base-url=${{ secrets.STAGING_URL }} \
          -v
      continue-on-error: false

  deploy-production:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    environment: production
    needs: []  # Remove staging dependency for direct production releases
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Backup production database
      run: |
        echo "Creating production database backup..."
        # Add database backup commands

    - name: Run database migrations (production)
      run: |
        alembic upgrade head
      env:
        DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}

    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here

    - name: Run health checks
      run: |
        echo "Running production health checks..."
        curl -f ${{ secrets.PRODUCTION_URL }}/health || exit 1

    - name: Run smoke tests
      run: |
        pytest tests/smoke/ \
          --base-url=${{ secrets.PRODUCTION_URL }} \
          -v
      continue-on-error: false

    - name: Rollback on failure
      if: failure()
      run: |
        echo "Deployment failed, initiating rollback..."
        # Add rollback commands here