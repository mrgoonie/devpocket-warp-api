[tool:pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Test directories
testpaths = tests

# Minimum Python version
minversion = 6.0

# Add options to make pytest work better with asyncio
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    --timeout=300
    --randomly-seed=12345

# Asyncio mode
asyncio_mode = auto

# Test markers for categorization
markers =
    unit: Unit tests
    integration: Integration tests
    websocket: WebSocket tests
    api: API endpoint tests
    auth: Authentication tests
    database: Database tests
    services: Service layer tests
    security: Security tests
    performance: Performance tests
    slow: Slow running tests
    external: Tests that require external services

# Pytest environment variables
env =
    ENVIRONMENT = test
    TESTING = true
    APP_DEBUG = true
    DATABASE_URL = postgresql://test:test@localhost:5433/devpocket_test
    REDIS_URL = redis://localhost:6380
    JWT_SECRET_KEY = test_secret_key_for_testing_only
    JWT_ALGORITHM = HS256
    JWT_ACCESS_TOKEN_EXPIRE_MINUTES = 30
    OPENROUTER_API_BASE_URL = http://localhost:8001/mock
    LOG_LEVEL = INFO

# Filter warnings
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*coroutine.*was never awaited:RuntimeWarning